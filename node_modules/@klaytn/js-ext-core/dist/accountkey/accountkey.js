"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountKeyRoleBased = exports.AccountKeyWeightedMultiSig = exports.AccountKeyFail = exports.AccountKeyPublic = exports.AccountKeyLegacy = exports.AccountKeyNil = void 0;
const field_1 = require("../field");
const util_1 = require("../util");
const factory_1 = require("./factory");
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeynil
class AccountKeyNil extends factory_1.AccountKey {
    toRLP() {
        return "0x80";
    }
}
exports.AccountKeyNil = AccountKeyNil;
AccountKeyNil.type = util_1.AccountKeyType.Nil;
AccountKeyNil.typeName = "AccountKeyNil";
AccountKeyNil.fieldTypes = {
    "type": field_1.FieldTypeUint8,
};
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeylegacy
class AccountKeyLegacy extends factory_1.AccountKey {
    toRLP() {
        return "0x01c0";
    }
}
exports.AccountKeyLegacy = AccountKeyLegacy;
AccountKeyLegacy.type = util_1.AccountKeyType.Legacy;
AccountKeyLegacy.typeName = "AccountKeyLegacy";
AccountKeyLegacy.fieldTypes = {
    "type": field_1.FieldTypeUint8,
};
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeypublic
class AccountKeyPublic extends factory_1.AccountKey {
    // 0x02 + encode(CompressedPubKey)
    toRLP() {
        const inner = this.getField("key");
        return util_1.HexStr.concat("0x02", util_1.RLP.encode(inner));
    }
}
exports.AccountKeyPublic = AccountKeyPublic;
AccountKeyPublic.type = util_1.AccountKeyType.Public;
AccountKeyPublic.typeName = "AccountKeyPublic";
AccountKeyPublic.fieldTypes = {
    "type": field_1.FieldTypeUint8,
    "key": field_1.FieldTypeCompressedPubKey,
};
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeyfail
class AccountKeyFail extends factory_1.AccountKey {
    toRLP() {
        return "0x03c0";
    }
}
exports.AccountKeyFail = AccountKeyFail;
AccountKeyFail.type = util_1.AccountKeyType.Fail;
AccountKeyFail.typeName = "AccountKeyFail";
AccountKeyFail.fieldTypes = {
    "type": field_1.FieldTypeUint8,
};
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeyweightedmultisig
class AccountKeyWeightedMultiSig extends factory_1.AccountKey {
    // 0x04 + encode([threshold, [[weight1, compressedPubKey1], [weight2, compressedPubKey2]]])
    toRLP() {
        const inner = this.getFields(["threshold", "keys"]);
        return util_1.HexStr.concat("0x04", util_1.RLP.encode(inner));
    }
}
exports.AccountKeyWeightedMultiSig = AccountKeyWeightedMultiSig;
AccountKeyWeightedMultiSig.type = util_1.AccountKeyType.WeightedMultiSig;
AccountKeyWeightedMultiSig.typeName = "AccountKeyWeightedMultiSig";
AccountKeyWeightedMultiSig.fieldTypes = {
    "type": field_1.FieldTypeUint8,
    "threshold": field_1.FieldTypeUint32,
    "keys": field_1.FieldTypeWeightedPublicKeys,
};
// https://docs.klaytn.foundation/content/klaytn/design/accounts#accountkeyrolebased
class AccountKeyRoleBased extends factory_1.AccountKey {
    // 0x05 + encode([key1, key2, key3])
    // = 0x05 + encode(keys)
    toRLP() {
        const inner = this.getField("keys");
        return util_1.HexStr.concat("0x05", util_1.RLP.encode(inner));
    }
}
exports.AccountKeyRoleBased = AccountKeyRoleBased;
AccountKeyRoleBased.type = util_1.AccountKeyType.RoleBased;
AccountKeyRoleBased.typeName = "AccountKeyRoleBased";
AccountKeyRoleBased.fieldTypes = {
    "type": field_1.FieldTypeUint8,
    "keys": field_1.FieldTypeAccountKeyList,
};
//# sourceMappingURL=accountkey.js.map