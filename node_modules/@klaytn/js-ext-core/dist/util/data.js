"use strict";
// Data type utilities
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HexStr = exports.RLP = void 0;
const bignumber_1 = require("@ethersproject/bignumber");
const bytes = __importStar(require("@ethersproject/bytes"));
const rlp = __importStar(require("@ethersproject/rlp"));
exports.RLP = {
    encode: rlp.encode,
    decode: rlp.decode,
};
exports.HexStr = {
    toNumber(value) {
        return bignumber_1.BigNumber.from(value).toNumber();
    },
    fromNumber(value) {
        return bignumber_1.BigNumber.from(value).toHexString();
    },
    from(value) {
        return bytes.hexlify(value);
    },
    concat(...items) {
        return bytes.hexlify(bytes.concat(items));
    },
    isHex(value, length) {
        return bytes.isHexString(value, length);
    },
    stripZeros(value) {
        return bytes.hexlify(bytes.stripZeros(value));
    },
    zeroPad(value, length) {
        return bytes.hexZeroPad(value, length);
    }
};
//# sourceMappingURL=data.js.map