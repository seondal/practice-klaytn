"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
 * web3rpc
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The TracingOptions model module.
 * @module model/TracingOptions
 * @version 0.9.8
 */
var TracingOptions = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>TracingOptions</code>.
   * @alias module:model/TracingOptions
   */
  function TracingOptions() {
    _classCallCheck(this, TracingOptions);
    TracingOptions.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(TracingOptions, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>TracingOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TracingOptions} obj Optional instance to populate.
     * @return {module:model/TracingOptions} The populated <code>TracingOptions</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new TracingOptions();
        if (data.hasOwnProperty('disableStorage')) {
          obj['disableStorage'] = _ApiClient["default"].convertToType(data['disableStorage'], 'Boolean');
        }
        if (data.hasOwnProperty('disableMemory')) {
          obj['disableMemory'] = _ApiClient["default"].convertToType(data['disableMemory'], 'Boolean');
        }
        if (data.hasOwnProperty('disableStack')) {
          obj['disableStack'] = _ApiClient["default"].convertToType(data['disableStack'], 'Boolean');
        }
        if (data.hasOwnProperty('timeout')) {
          obj['timeout'] = _ApiClient["default"].convertToType(data['timeout'], 'String');
        }
        if (data.hasOwnProperty('trace')) {
          obj['trace'] = _ApiClient["default"].convertToType(data['trace'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TracingOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TracingOptions</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
        throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
      }
      // ensure the json data is a string
      if (data['trace'] && !(typeof data['trace'] === 'string' || data['trace'] instanceof String)) {
        throw new Error("Expected the field `trace` to be a primitive type in the JSON string but got " + data['trace']);
      }
      return true;
    }
  }]);
  return TracingOptions;
}();
/**
 * Setting this to true will disable storage capture (default = false).
 * @member {Boolean} disableStorage
 * @default false
 */
TracingOptions.prototype['disableStorage'] = false;

/**
 * Setting this to true will disable memory capture (default = false).
 * @member {Boolean} disableMemory
 * @default false
 */
TracingOptions.prototype['disableMemory'] = false;

/**
 * Setting this to true will disable stack capture (default = false).
 * @member {Boolean} disableStack
 * @default false
 */
TracingOptions.prototype['disableStack'] = false;

/**
 * Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".
 * @member {String} timeout
 */
TracingOptions.prototype['timeout'] = undefined;

/**
 * Setting this will enable JavaScript-based transaction tracing, described in the next section. If set, the previous four arguments will be ignored. The predefined tracers can also be used as the following table. | Tracer Name | Description | |-----|-----| | 4byteTracer | 4byteTracer searches for 4byte-identifiers, and collects them for post-processing. It collects the methods identifiers along with the size of the supplied data, so a reversed signature can be matched against the size of the data. | | callTracer | callTracer is a full-blown transaction tracer that extracts and reports all the internal calls made by a transaction, along with any useful information. | | fastCallTracer | fastCallTracer is a Go-native version of callTracer. Since it is not executed on JavaScript VM, it shows more than 10x speedup compared to callTracer. Please use fastCallTracer instead of callTracer if the performance is the matter of the first importance. | | evmdisTracer | evmdisTracer returns sufficient information from a trace to perform evmdis-style disassembly. | | noopTracer | noopTracer is just the barebone boilerplate code required from a JavaScript object to be usable as a transaction tracer. | | opcountTracer | opcountTracer is a sample tracer that just counts the number of instructions executed by the KLVM before the transaction terminated. | | prestateTracer | prestateTracer outputs sufficient information to create a local execution of the transaction from a custom assembled genesis block. | | revertTracer | revertTracer outputs the error string of REVERT. If the execution is not reverted, it outputs an empty string. | | unigramTracer | unigramTracer returns the number of occurrences of each opcode. | | bigramTracer | bigramTracer returns the number of occurrences of two consecutive opcodes. | | trigramTracer | trigramTracer returns the number of occurrences of three consecutive opcodes. | 
 * @member {module:model/TracingOptions.TraceEnum} trace
 */
TracingOptions.prototype['trace'] = undefined;

/**
 * Allowed values for the <code>trace</code> property.
 * @enum {String}
 * @readonly
 */
TracingOptions['TraceEnum'] = {
  /**
   * value: "4byteTracer"
   * @const
   */
  "4byteTracer": "4byteTracer",
  /**
   * value: "callTracer"
   * @const
   */
  "callTracer": "callTracer",
  /**
   * value: "fastCallTracer"
   * @const
   */
  "fastCallTracer": "fastCallTracer",
  /**
   * value: "evmdisTracer"
   * @const
   */
  "evmdisTracer": "evmdisTracer",
  /**
   * value: "noopTracer"
   * @const
   */
  "noopTracer": "noopTracer",
  /**
   * value: "opcountTracer"
   * @const
   */
  "opcountTracer": "opcountTracer",
  /**
   * value: "prestateTracer"
   * @const
   */
  "prestateTracer": "prestateTracer",
  /**
   * value: "revertTracer"
   * @const
   */
  "revertTracer": "revertTracer",
  /**
   * value: "unigramTracer"
   * @const
   */
  "unigramTracer": "unigramTracer",
  /**
   * value: "bigramTracer"
   * @const
   */
  "bigramTracer": "bigramTracer",
  /**
   * value: "trigramTracer"
   * @const
   */
  "trigramTracer": "trigramTracer"
};
var _default = exports["default"] = TracingOptions;