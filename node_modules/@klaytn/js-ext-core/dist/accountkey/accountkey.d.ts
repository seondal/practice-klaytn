import { AccountKeyType } from "../util";
import { AccountKey } from "./factory";
export declare class AccountKeyNil extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
    };
    toRLP(): string;
}
export declare class AccountKeyLegacy extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
    };
    toRLP(): string;
}
export declare class AccountKeyPublic extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
        key: {
            canonicalize(value: any): string;
            emptyValue(): string;
        };
    };
    toRLP(): string;
}
export declare class AccountKeyFail extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
    };
    toRLP(): string;
}
export declare class AccountKeyWeightedMultiSig extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
        threshold: import("../field").FieldTypeNumberBits;
        keys: {
            _assert(value: any, pred: boolean): void;
            canonicalize(value: any): import("../field").WeightedPublicKey[];
            emptyValue(): import("../field").WeightedPublicKey[];
        };
    };
    toRLP(): string;
}
export declare class AccountKeyRoleBased extends AccountKey {
    static type: AccountKeyType;
    static typeName: string;
    static fieldTypes: {
        type: import("../field").FieldTypeNumberBits;
        keys: {
            _assert(value: any, pred: boolean): void;
            canonicalize(value: any): string[];
            emptyValue(): string[];
        };
    };
    toRLP(): string;
}
//# sourceMappingURL=accountkey.d.ts.map