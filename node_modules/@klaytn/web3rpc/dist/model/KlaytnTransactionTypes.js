"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _Signature = _interopRequireDefault(require("./Signature"));
var _TxTypeAccountUpdate = _interopRequireDefault(require("./TxTypeAccountUpdate"));
var _TxTypeCancel = _interopRequireDefault(require("./TxTypeCancel"));
var _TxTypeFeeDelegatedAccountUpdate = _interopRequireDefault(require("./TxTypeFeeDelegatedAccountUpdate"));
var _TxTypeFeeDelegatedAccountUpdateWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedAccountUpdateWithRatio"));
var _TxTypeFeeDelegatedCancel = _interopRequireDefault(require("./TxTypeFeeDelegatedCancel"));
var _TxTypeFeeDelegatedCancelWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedCancelWithRatio"));
var _TxTypeFeeDelegatedSmartContractDeploy = _interopRequireDefault(require("./TxTypeFeeDelegatedSmartContractDeploy"));
var _TxTypeFeeDelegatedSmartContractDeployWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedSmartContractDeployWithRatio"));
var _TxTypeFeeDelegatedSmartContractExecution = _interopRequireDefault(require("./TxTypeFeeDelegatedSmartContractExecution"));
var _TxTypeFeeDelegatedSmartContractExecutionWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedSmartContractExecutionWithRatio"));
var _TxTypeFeeDelegatedValueTransfer = _interopRequireDefault(require("./TxTypeFeeDelegatedValueTransfer"));
var _TxTypeFeeDelegatedValueTransferMemo = _interopRequireDefault(require("./TxTypeFeeDelegatedValueTransferMemo"));
var _TxTypeFeeDelegatedValueTransferMemoWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedValueTransferMemoWithRatio"));
var _TxTypeFeeDelegatedValueTransferWithRatio = _interopRequireDefault(require("./TxTypeFeeDelegatedValueTransferWithRatio"));
var _TxTypeLegacyTransaction = _interopRequireDefault(require("./TxTypeLegacyTransaction"));
var _TxTypeSmartContractDeploy = _interopRequireDefault(require("./TxTypeSmartContractDeploy"));
var _TxTypeSmartContractExecution = _interopRequireDefault(require("./TxTypeSmartContractExecution"));
var _TxTypeValueTransfer = _interopRequireDefault(require("./TxTypeValueTransfer"));
var _TxTypeValueTransferMemo = _interopRequireDefault(require("./TxTypeValueTransferMemo"));
var _class;
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
 * web3rpc
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The KlaytnTransactionTypes model module.
 * @module model/KlaytnTransactionTypes
 * @version 0.9.8
 */
var KlaytnTransactionTypes = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>KlaytnTransactionTypes</code>.
   * @alias module:model/KlaytnTransactionTypes
   * @param {(module:model/TxTypeAccountUpdate|module:model/TxTypeCancel|module:model/TxTypeFeeDelegatedAccountUpdate|module:model/TxTypeFeeDelegatedAccountUpdateWithRatio|module:model/TxTypeFeeDelegatedCancel|module:model/TxTypeFeeDelegatedCancelWithRatio|module:model/TxTypeFeeDelegatedSmartContractDeploy|module:model/TxTypeFeeDelegatedSmartContractDeployWithRatio|module:model/TxTypeFeeDelegatedSmartContractExecution|module:model/TxTypeFeeDelegatedSmartContractExecutionWithRatio|module:model/TxTypeFeeDelegatedValueTransfer|module:model/TxTypeFeeDelegatedValueTransferMemo|module:model/TxTypeFeeDelegatedValueTransferMemoWithRatio|module:model/TxTypeFeeDelegatedValueTransferWithRatio|module:model/TxTypeLegacyTransaction|module:model/TxTypeSmartContractDeploy|module:model/TxTypeSmartContractExecution|module:model/TxTypeValueTransfer|module:model/TxTypeValueTransferMemo)} instance The actual instance to initialize KlaytnTransactionTypes.
   */
  function KlaytnTransactionTypes() {
    var instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    _classCallCheck(this, KlaytnTransactionTypes);
    /**
     * Returns the JSON representation of the actual intance.
     * @return {string}
     */
    _defineProperty(this, "toJSON", function () {
      return this.getActualInstance();
    });
    if (instance === null) {
      this.actualInstance = null;
      return;
    }
    var match = 0;
    var errorMessages = [];
    try {
      if (typeof instance === "TxTypeLegacyTransaction") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeLegacyTransaction["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeLegacyTransaction from JS object
        this.actualInstance = _TxTypeLegacyTransaction["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeLegacyTransaction
      errorMessages.push("Failed to construct TxTypeLegacyTransaction: " + err);
    }
    try {
      if (typeof instance === "TxTypeValueTransfer") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeValueTransfer["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeValueTransfer from JS object
        this.actualInstance = _TxTypeValueTransfer["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeValueTransfer
      errorMessages.push("Failed to construct TxTypeValueTransfer: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedValueTransfer") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedValueTransfer["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedValueTransfer from JS object
        this.actualInstance = _TxTypeFeeDelegatedValueTransfer["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedValueTransfer
      errorMessages.push("Failed to construct TxTypeFeeDelegatedValueTransfer: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedValueTransferWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedValueTransferWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedValueTransferWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedValueTransferWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedValueTransferWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedValueTransferWithRatio: " + err);
    }
    try {
      if (typeof instance === "TxTypeValueTransferMemo") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeValueTransferMemo["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeValueTransferMemo from JS object
        this.actualInstance = _TxTypeValueTransferMemo["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeValueTransferMemo
      errorMessages.push("Failed to construct TxTypeValueTransferMemo: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedValueTransferMemo") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedValueTransferMemo["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedValueTransferMemo from JS object
        this.actualInstance = _TxTypeFeeDelegatedValueTransferMemo["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedValueTransferMemo
      errorMessages.push("Failed to construct TxTypeFeeDelegatedValueTransferMemo: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedValueTransferMemoWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedValueTransferMemoWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedValueTransferMemoWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedValueTransferMemoWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedValueTransferMemoWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedValueTransferMemoWithRatio: " + err);
    }
    try {
      if (typeof instance === "TxTypeAccountUpdate") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeAccountUpdate["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeAccountUpdate from JS object
        this.actualInstance = _TxTypeAccountUpdate["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeAccountUpdate
      errorMessages.push("Failed to construct TxTypeAccountUpdate: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedAccountUpdate") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedAccountUpdate["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedAccountUpdate from JS object
        this.actualInstance = _TxTypeFeeDelegatedAccountUpdate["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedAccountUpdate
      errorMessages.push("Failed to construct TxTypeFeeDelegatedAccountUpdate: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedAccountUpdateWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedAccountUpdateWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedAccountUpdateWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedAccountUpdateWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedAccountUpdateWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedAccountUpdateWithRatio: " + err);
    }
    try {
      if (typeof instance === "TxTypeSmartContractDeploy") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeSmartContractDeploy["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeSmartContractDeploy from JS object
        this.actualInstance = _TxTypeSmartContractDeploy["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeSmartContractDeploy
      errorMessages.push("Failed to construct TxTypeSmartContractDeploy: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedSmartContractDeploy") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedSmartContractDeploy["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedSmartContractDeploy from JS object
        this.actualInstance = _TxTypeFeeDelegatedSmartContractDeploy["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedSmartContractDeploy
      errorMessages.push("Failed to construct TxTypeFeeDelegatedSmartContractDeploy: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedSmartContractDeployWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedSmartContractDeployWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedSmartContractDeployWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedSmartContractDeployWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedSmartContractDeployWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedSmartContractDeployWithRatio: " + err);
    }
    try {
      if (typeof instance === "TxTypeSmartContractExecution") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeSmartContractExecution["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeSmartContractExecution from JS object
        this.actualInstance = _TxTypeSmartContractExecution["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeSmartContractExecution
      errorMessages.push("Failed to construct TxTypeSmartContractExecution: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedSmartContractExecution") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedSmartContractExecution["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedSmartContractExecution from JS object
        this.actualInstance = _TxTypeFeeDelegatedSmartContractExecution["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedSmartContractExecution
      errorMessages.push("Failed to construct TxTypeFeeDelegatedSmartContractExecution: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedSmartContractExecutionWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedSmartContractExecutionWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedSmartContractExecutionWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedSmartContractExecutionWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedSmartContractExecutionWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedSmartContractExecutionWithRatio: " + err);
    }
    try {
      if (typeof instance === "TxTypeCancel") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeCancel["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeCancel from JS object
        this.actualInstance = _TxTypeCancel["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeCancel
      errorMessages.push("Failed to construct TxTypeCancel: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedCancel") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedCancel["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedCancel from JS object
        this.actualInstance = _TxTypeFeeDelegatedCancel["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedCancel
      errorMessages.push("Failed to construct TxTypeFeeDelegatedCancel: " + err);
    }
    try {
      if (typeof instance === "TxTypeFeeDelegatedCancelWithRatio") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _TxTypeFeeDelegatedCancelWithRatio["default"].validateJSON(instance); // throw an exception if no match
        // create TxTypeFeeDelegatedCancelWithRatio from JS object
        this.actualInstance = _TxTypeFeeDelegatedCancelWithRatio["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into TxTypeFeeDelegatedCancelWithRatio
      errorMessages.push("Failed to construct TxTypeFeeDelegatedCancelWithRatio: " + err);
    }
    if (match > 1) {
      throw new Error("Multiple matches found constructing `KlaytnTransactionTypes` with oneOf schemas TxTypeAccountUpdate, TxTypeCancel, TxTypeFeeDelegatedAccountUpdate, TxTypeFeeDelegatedAccountUpdateWithRatio, TxTypeFeeDelegatedCancel, TxTypeFeeDelegatedCancelWithRatio, TxTypeFeeDelegatedSmartContractDeploy, TxTypeFeeDelegatedSmartContractDeployWithRatio, TxTypeFeeDelegatedSmartContractExecution, TxTypeFeeDelegatedSmartContractExecutionWithRatio, TxTypeFeeDelegatedValueTransfer, TxTypeFeeDelegatedValueTransferMemo, TxTypeFeeDelegatedValueTransferMemoWithRatio, TxTypeFeeDelegatedValueTransferWithRatio, TxTypeLegacyTransaction, TxTypeSmartContractDeploy, TxTypeSmartContractExecution, TxTypeValueTransfer, TxTypeValueTransferMemo. Input: " + JSON.stringify(instance));
    } else if (match === 0) {
      this.actualInstance = null; // clear the actual instance in case there are multiple matches
      throw new Error("No match found constructing `KlaytnTransactionTypes` with oneOf schemas TxTypeAccountUpdate, TxTypeCancel, TxTypeFeeDelegatedAccountUpdate, TxTypeFeeDelegatedAccountUpdateWithRatio, TxTypeFeeDelegatedCancel, TxTypeFeeDelegatedCancelWithRatio, TxTypeFeeDelegatedSmartContractDeploy, TxTypeFeeDelegatedSmartContractDeployWithRatio, TxTypeFeeDelegatedSmartContractExecution, TxTypeFeeDelegatedSmartContractExecutionWithRatio, TxTypeFeeDelegatedValueTransfer, TxTypeFeeDelegatedValueTransferMemo, TxTypeFeeDelegatedValueTransferMemoWithRatio, TxTypeFeeDelegatedValueTransferWithRatio, TxTypeLegacyTransaction, TxTypeSmartContractDeploy, TxTypeSmartContractExecution, TxTypeValueTransfer, TxTypeValueTransferMemo. Details: " + errorMessages.join(", "));
    } else {// only 1 match
      // the input is valid
    }
  }

  /**
   * Constructs a <code>KlaytnTransactionTypes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/KlaytnTransactionTypes} obj Optional instance to populate.
   * @return {module:model/KlaytnTransactionTypes} The populated <code>KlaytnTransactionTypes</code> instance.
   */
  _createClass(KlaytnTransactionTypes, [{
    key: "getActualInstance",
    value:
    /**
     * Gets the actaul instance, which can be <code>TxTypeAccountUpdate</code>, <code>TxTypeCancel</code>, <code>TxTypeFeeDelegatedAccountUpdate</code>, <code>TxTypeFeeDelegatedAccountUpdateWithRatio</code>, <code>TxTypeFeeDelegatedCancel</code>, <code>TxTypeFeeDelegatedCancelWithRatio</code>, <code>TxTypeFeeDelegatedSmartContractDeploy</code>, <code>TxTypeFeeDelegatedSmartContractDeployWithRatio</code>, <code>TxTypeFeeDelegatedSmartContractExecution</code>, <code>TxTypeFeeDelegatedSmartContractExecutionWithRatio</code>, <code>TxTypeFeeDelegatedValueTransfer</code>, <code>TxTypeFeeDelegatedValueTransferMemo</code>, <code>TxTypeFeeDelegatedValueTransferMemoWithRatio</code>, <code>TxTypeFeeDelegatedValueTransferWithRatio</code>, <code>TxTypeLegacyTransaction</code>, <code>TxTypeSmartContractDeploy</code>, <code>TxTypeSmartContractExecution</code>, <code>TxTypeValueTransfer</code>, <code>TxTypeValueTransferMemo</code>.
     * @return {(module:model/TxTypeAccountUpdate|module:model/TxTypeCancel|module:model/TxTypeFeeDelegatedAccountUpdate|module:model/TxTypeFeeDelegatedAccountUpdateWithRatio|module:model/TxTypeFeeDelegatedCancel|module:model/TxTypeFeeDelegatedCancelWithRatio|module:model/TxTypeFeeDelegatedSmartContractDeploy|module:model/TxTypeFeeDelegatedSmartContractDeployWithRatio|module:model/TxTypeFeeDelegatedSmartContractExecution|module:model/TxTypeFeeDelegatedSmartContractExecutionWithRatio|module:model/TxTypeFeeDelegatedValueTransfer|module:model/TxTypeFeeDelegatedValueTransferMemo|module:model/TxTypeFeeDelegatedValueTransferMemoWithRatio|module:model/TxTypeFeeDelegatedValueTransferWithRatio|module:model/TxTypeLegacyTransaction|module:model/TxTypeSmartContractDeploy|module:model/TxTypeSmartContractExecution|module:model/TxTypeValueTransfer|module:model/TxTypeValueTransferMemo)} The actual instance.
     */
    function getActualInstance() {
      return this.actualInstance;
    }

    /**
     * Sets the actaul instance, which can be <code>TxTypeAccountUpdate</code>, <code>TxTypeCancel</code>, <code>TxTypeFeeDelegatedAccountUpdate</code>, <code>TxTypeFeeDelegatedAccountUpdateWithRatio</code>, <code>TxTypeFeeDelegatedCancel</code>, <code>TxTypeFeeDelegatedCancelWithRatio</code>, <code>TxTypeFeeDelegatedSmartContractDeploy</code>, <code>TxTypeFeeDelegatedSmartContractDeployWithRatio</code>, <code>TxTypeFeeDelegatedSmartContractExecution</code>, <code>TxTypeFeeDelegatedSmartContractExecutionWithRatio</code>, <code>TxTypeFeeDelegatedValueTransfer</code>, <code>TxTypeFeeDelegatedValueTransferMemo</code>, <code>TxTypeFeeDelegatedValueTransferMemoWithRatio</code>, <code>TxTypeFeeDelegatedValueTransferWithRatio</code>, <code>TxTypeLegacyTransaction</code>, <code>TxTypeSmartContractDeploy</code>, <code>TxTypeSmartContractExecution</code>, <code>TxTypeValueTransfer</code>, <code>TxTypeValueTransferMemo</code>.
     * @param {(module:model/TxTypeAccountUpdate|module:model/TxTypeCancel|module:model/TxTypeFeeDelegatedAccountUpdate|module:model/TxTypeFeeDelegatedAccountUpdateWithRatio|module:model/TxTypeFeeDelegatedCancel|module:model/TxTypeFeeDelegatedCancelWithRatio|module:model/TxTypeFeeDelegatedSmartContractDeploy|module:model/TxTypeFeeDelegatedSmartContractDeployWithRatio|module:model/TxTypeFeeDelegatedSmartContractExecution|module:model/TxTypeFeeDelegatedSmartContractExecutionWithRatio|module:model/TxTypeFeeDelegatedValueTransfer|module:model/TxTypeFeeDelegatedValueTransferMemo|module:model/TxTypeFeeDelegatedValueTransferMemoWithRatio|module:model/TxTypeFeeDelegatedValueTransferWithRatio|module:model/TxTypeLegacyTransaction|module:model/TxTypeSmartContractDeploy|module:model/TxTypeSmartContractExecution|module:model/TxTypeValueTransfer|module:model/TxTypeValueTransferMemo)} obj The actual instance.
     */
  }, {
    key: "setActualInstance",
    value: function setActualInstance(obj) {
      this.actualInstance = KlaytnTransactionTypes.constructFromObject(obj).getActualInstance();
    }
  }], [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      return new KlaytnTransactionTypes(data);
    }
  }]);
  return KlaytnTransactionTypes;
}();
/**
 * The address from which the transaction is sent.
 * @member {String} from
 */
_class = KlaytnTransactionTypes;
/**
 * Create an instance of KlaytnTransactionTypes from a JSON string.
 * @param {string} json_string JSON string.
 * @return {module:model/KlaytnTransactionTypes} An instance of KlaytnTransactionTypes.
 */
_defineProperty(KlaytnTransactionTypes, "fromJSON", function (json_string) {
  return _class.constructFromObject(JSON.parse(json_string));
});
KlaytnTransactionTypes.prototype['from'] = undefined;

/**
 * The address to which the transaction is directed.
 * @member {String} to
 */
KlaytnTransactionTypes.prototype['to'] = undefined;

/**
 * (optional, default: 90000) Integer of the gas provided for the transaction execution. Unused gas will be refunded to the sender. If the specified gas is not enough to execute the transaction, the transaction is reverted.
 * @member {String} gas
 */
KlaytnTransactionTypes.prototype['gas'] = undefined;

/**
 * (optional, default: 25000000000 Peb) Integer of the gasPrice used for each paid gas.
 * @member {String} gasPrice
 */
KlaytnTransactionTypes.prototype['gasPrice'] = undefined;

/**
 * Integer of the value sent with this transaction.
 * @member {String} value
 */
KlaytnTransactionTypes.prototype['value'] = undefined;

/**
 * The compiled byte code of a contract to deploy or data (function indicator and parameter values) required to call a contract.
 * @member {String} data
 */
KlaytnTransactionTypes.prototype['data'] = undefined;

/**
 * (optional) Integer of a nonce.
 * @member {String} nonce
 */
KlaytnTransactionTypes.prototype['nonce'] = undefined;

/**
 * The integer indicating TxTypeFeeDelegatedCancelWithRatio: 58
 * @member {Number} typeInt
 */
KlaytnTransactionTypes.prototype['typeInt'] = undefined;

/**
 * The fee payer address of the transaction.
 * @member {String} feePayer
 */
KlaytnTransactionTypes.prototype['feePayer'] = undefined;

/**
 * (optional - only for klay_sendTransactionAsFeePayer API) An array of signature objects. A signature object contains three fields (V, R, and S). V contains ECDSA recovery id. R contains ECDSA signature r while S contains ECDSA signature s.
 * @member {Array.<module:model/Signature>} signatures
 */
KlaytnTransactionTypes.prototype['signatures'] = undefined;

/**
 * Fee ratio of the fee payer. If it is 30, 30% of the fee will be paid by the fee payer. 70% will be paid by the sender. The range of fee ratio is 1 ~ 99, if it is out of range, the transaction will not be accepted.
 * @member {String} feeRatio
 */
KlaytnTransactionTypes.prototype['feeRatio'] = undefined;

/**
 * The data sent along with the transaction.
 * @member {String} input
 */
KlaytnTransactionTypes.prototype['input'] = undefined;

/**
 * The new account key of the from account in RLP encoded format. For more information about the account key, see Account Key.
 * @member {String} key
 */
KlaytnTransactionTypes.prototype['key'] = undefined;

/**
 * true if the address is humanReadable, false if the address is not humanReadable. Currently, the value should be false. Human-readable addresses will be supported later.
 * @member {Boolean} humanReadable
 */
KlaytnTransactionTypes.prototype['humanReadable'] = undefined;

/**
 * The code format of smart contract code. The value 0 indicates EVM.
 * @member {String} codeFormat
 */
KlaytnTransactionTypes.prototype['codeFormat'] = undefined;
KlaytnTransactionTypes.OneOf = ["TxTypeAccountUpdate", "TxTypeCancel", "TxTypeFeeDelegatedAccountUpdate", "TxTypeFeeDelegatedAccountUpdateWithRatio", "TxTypeFeeDelegatedCancel", "TxTypeFeeDelegatedCancelWithRatio", "TxTypeFeeDelegatedSmartContractDeploy", "TxTypeFeeDelegatedSmartContractDeployWithRatio", "TxTypeFeeDelegatedSmartContractExecution", "TxTypeFeeDelegatedSmartContractExecutionWithRatio", "TxTypeFeeDelegatedValueTransfer", "TxTypeFeeDelegatedValueTransferMemo", "TxTypeFeeDelegatedValueTransferMemoWithRatio", "TxTypeFeeDelegatedValueTransferWithRatio", "TxTypeLegacyTransaction", "TxTypeSmartContractDeploy", "TxTypeSmartContractExecution", "TxTypeValueTransfer", "TxTypeValueTransferMemo"];
var _default = exports["default"] = KlaytnTransactionTypes;